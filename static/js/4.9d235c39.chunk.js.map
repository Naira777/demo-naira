{"version":3,"sources":["Components/login/login.jsx"],"names":["LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","placeholder","name","validate","required","component","Input","type","captchaUrl","src","createField","error","className","style","formSummaryError","connect","state","auth","isAuth","login","email","to","formData","password","rememberMe","captcha"],"mappings":"wGAAA,sGAsDMA,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EA1CL,SAACE,GACjB,OACE,0BAAMC,SAAUD,EAAME,cACpB,6BACE,kBAAC,IAAD,CACEC,YAAa,QACbC,KAAM,QACNC,SAAU,CAACC,KACXC,UAAWC,OAIf,6BACE,kBAAC,IAAD,CACEL,YAAa,WACbC,KAAM,WACNK,KAAM,WACNJ,SAAU,CAACC,KACXC,UAAWC,OAIf,6BACE,kBAAC,IAAD,CAAOD,UAAWC,IAAOJ,KAAM,aAAcK,KAAM,aAAe,IADpE,eAKCT,EAAMU,YAAc,yBAAKC,IAAKX,EAAMU,aACpCV,EAAMU,YACLE,YAAY,qBAAsB,UAAW,CAACN,KAAWE,IAAO,IAEjER,EAAMa,OACL,yBAAKC,UAAWC,IAAMC,kBAAmBhB,EAAMa,OAGjD,6BACE,gDAqCOI,uBAPS,SAACC,GAAD,MAAY,CAClCR,WAAYQ,EAAMC,KAAKT,WACvBU,OAAQF,EAAMC,KAAKC,OACnBC,MAAOH,EAAMC,KAAKE,MAClBC,MAAOJ,EAAMC,KAAKG,SAGoB,CAAED,WAA3BJ,EA7BD,SAACjB,GACb,GAAIA,EAAMoB,OACR,OAAO,kBAAC,IAAD,CAAUG,GAAI,aAYxB,OACG,6BACE,uCACA,kBAAC1B,EAAD,CAAgBI,SAZH,SAACuB,GAChBxB,EAAMqB,MACJG,EAASF,MACTE,EAASC,SACTD,EAASE,WACTF,EAASG,UAO2BjB,WAAYV,EAAMU","file":"static/js/4.9d235c39.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport { required } from \"../../.vs/src/utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  login,\r\n } from \"../../Redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"../common/FormsControls/FormsControls.module.css\";\r\nimport { createField } from \"../common/FormsControls/FormsControls\";\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Email\"}\r\n          name={\"email\"}\r\n          validate={[required]}\r\n          component={Input}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Field\r\n          placeholder={\"Password\"}\r\n          name={\"password\"}\r\n          type={\"password\"}\r\n          validate={[required]}\r\n          component={Input}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"} />{\" \"}\r\n        Remember me\r\n      </div>\r\n\r\n      {props.captchaUrl && <img src={props.captchaUrl} />}\r\n      {props.captchaUrl &&\r\n        createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n      {props.error && (\r\n        <div className={style.formSummaryError}>{props.error}</div>\r\n      )}\r\n\r\n      <div>\r\n        <button> Login </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.login(\r\n      formData.email,\r\n      formData.password,\r\n      formData.rememberMe,\r\n      formData.captcha\r\n    );\r\n  };\r\n\r\n return (\r\n    <div>\r\n      <h1> LOGIN </h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  captchaUrl: state.auth.captchaUrl,\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n  email: state.auth.email,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"sourceRoot":""}