{"version":3,"sources":["Components/common/FormsControls/FormsControls.module.css",".vs/src/utils/validators/validators.js","Components/common/FormsControls/FormsControls.js","Components/login/login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","placeholder","name","validate","component","type","style","formSummaryError","connect","state","isAuth","auth","login","email","to","formData","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCA3H,oEAAO,IAAMC,EAAW,SAAAC,GAGxB,IAAIA,EAEJ,MAAO,qBAIMC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAE1C,GAAKA,EAAMG,OAASD,EAAW,MAAO,wC,mJCR9BE,EAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBC,GAAW,EAArBC,MAAqB,yCAI1DC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OAEM,yBAAKC,UAAYC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAO,KACrE,6BACDJ,EAAMQ,UAGVN,GAAY,8BAAOH,EAAKK,SASbK,EAAW,SAACT,GAAW,IAG7BF,EAAmCE,EAAnCF,MAAsBY,GAAaV,EAA5BD,KAA4BC,EAAtBC,MAHe,YAGOD,EAHP,2BAInC,OAAO,kBAACH,EAAgBG,EAAjB,IAAyB,8CAAcF,EAAWY,IAAlD,MAIMC,EAAQ,SAACX,GAAW,IAG1BF,EAAmCE,EAAnCF,MAAsBY,GAAaV,EAA5BD,KAA4BC,EAAtBC,MAHY,YAGUD,EAHV,2BAIhC,OAAO,kBAACH,EAAgBG,EAAjB,IAAyB,2CAAWF,EAAWY,IAA/C,O,iCCrCP,yGAoDME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA1CL,SAACb,GAElB,OAEE,0BAAMe,SAAWf,EAAMgB,cACvB,6BACA,kBAAC,IAAD,CAAOC,YAAc,QAASC,KAAO,QACrCC,SAAW,CAAC3B,KACZ4B,UAAYT,OAIZ,6BACC,kBAAC,IAAD,CAAOM,YAAc,WAAYC,KAAO,WACxCG,KAAO,WACPF,SAAW,CAAC3B,KACZ4B,UAAYT,OAIX,6BAED,kBAAC,IAAD,CAAOS,UAAYT,IAAOO,KAAO,aAAcG,KAAO,aAFrD,gBAMCrB,EAAMI,OAAS,yBAAKC,UAAWiB,IAAMC,kBAExCvB,EAAMI,OAKJ,6BAED,mDA0CWoB,uBAPS,SAACC,GAAD,MAAa,CAErCC,OAAQD,EAAME,KAAKD,OACnBE,MAAOH,EAAME,KAAKC,MAClBC,MAAOJ,EAAME,KAAKE,SAGsB,CAACD,WAA1BJ,EA9BD,SAACxB,GAGb,GAAIA,EAAM0B,OACR,OAAO,kBAAC,IAAD,CAAUI,GAAM,aAS1B,OAAO,6BAEH,uCAEF,kBAAClB,EAAD,CAAiBG,SAVH,SAACgB,GAEjB/B,EAAM4B,MAAMG,EAASF,MAAOE,EAASC,SAAUD,EAASE","file":"static/js/6.8c5626ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Y5uN\",\"error\":\"FormsControls_error__3cUnM\",\"formSummaryError\":\"FormsControls_formSummaryError__1AC-z\"};","\r\nexport const required = value => {\r\n\r\n\r\nif (value) return undefined;\r\n\r\nreturn \"Field is required\";\r\n\r\n\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n      if ( value.length > maxLength) return 'Max length is ${maxLength} symbols';\r\n       return undefined;\r\n    }\r\n\r\n","import React from \"react\";\r\nimport styles from '../FormsControls/FormsControls.module.css';\r\n\r\n\r\nexport const  FormControl = ({input, meta, child, ...props}) => {\r\n\r\n//verevi grvac@ nshanakum e, vor propsi mejic hanum e input@ ev metan\r\n//aysinqn propsi mej mnum e props@ aranc inputi ev metai\r\nconst hasError = meta.touched && meta.error;\r\nreturn (\r\n\r\n      <div className= {styles.formControl + \" \" + (hasError ? styles.error: \"\")}>\r\n       <div>\r\n     {props.children}\r\n     </div>\r\n\r\n{ hasError && <span>{meta.error}</span> }\r\n     </div>\r\n   \r\n\r\n)\r\n\r\n      \r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n\r\nconst {input, meta, child,...restProps} = props;\r\nreturn <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n\r\nconst {input, meta, child,...restProps} = props;\r\nreturn <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../.vs/src/utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport {login, setAuthUserData, getAuthUserData} from '../../Redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\nimport { compose } from 'redux';\r\n\r\nconst LoginForm = (props) => {\r\n\r\n return ( \r\n    \r\n   <form onSubmit= {props.handleSubmit}>\r\n   <div>\r\n   <Field placeholder= {\"Email\"} name= {\"email\"}\r\n   validate= {[required]}\r\n   component= {Input}/>\r\n   \r\n   </div>\r\n\r\n   <div>\r\n    <Field placeholder= {\"Password\"} name= {\"password\"} \r\n    type= {\"password\"}\r\n    validate= {[required]}\r\n    component= {Input}/>\r\n\r\n   </div>\r\n\r\n     <div>\r\n\r\n    <Field component= {Input} name= {\"rememberMe\"} type= {\"checkbox\"} /> Remember me\r\n\r\n    </div>\r\n\r\n     {props.error && <div className={style.formSummaryError} >\r\n\r\n  {props.error}\r\n\r\n   </div>\r\n}\r\n\r\n     <div>\r\n\r\n    <button>  Login   </button>\r\n\r\n      </div>\r\n</form>\r\n)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n// mer stexcac formin talis enq login anun@, \r\n//vor@ gtnvum e LoginForm-um\r\n\r\nconst Login = (props) => {\r\n\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to = {\"/profile\"} />\r\n  }\r\n\r\nconst onSubmit = (formData) => {\r\n\r\n props.login(formData.email, formData.password, formData.rememberMe);\r\n//ayspes stacavac informacian dispatch enq anum serverin\r\n  }\r\n\r\n return <div>  \r\n\r\n     <h1> LOGIN </h1>  \r\n\r\n   <LoginReduxForm  onSubmit={onSubmit} />\r\n\r\n       </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ( {\r\n\r\nisAuth: state.auth.isAuth,\r\nlogin: state.auth.login,\r\nemail: state.auth.email\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} ) (Login);"],"sourceRoot":""}