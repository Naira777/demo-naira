{"version":3,"sources":["Components/common/FormsControls/FormsControls.module.css",".vs/src/utils/validators/validators.js","Components/common/FormsControls/FormsControls.js","Components/Dialogs/hoc/withAuthRedirect.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Profile.module.css","Components/Profile/Myposts/Myposts.module.css","Components/Profile/Myposts/Post/Post.module.css","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/Myposts.jsx","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Myposts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Post","s","item","src","message","likesCount","maxLength10","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","name","validate","MyPosts","memo","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","ProfileStatusWithHooks","useState","editMode","setEditeMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.f420f742.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Y5uN\",\"error\":\"FormsControls_error__3cUnM\",\"formSummaryError\":\"FormsControls_formSummaryError__1AC-z\"};","\r\nexport const required = value => {\r\n\r\n\r\nif (value) return undefined;\r\n\r\nreturn \"Field is required\";\r\n\r\n\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n      if ( value.length > maxLength) return 'Max length is ${maxLength} symbols';\r\n       return undefined;\r\n    }\r\n\r\n","import React from \"react\";\r\nimport styles from '../FormsControls/FormsControls.module.css';\r\n\r\n\r\nexport const  FormControl = ({input, meta, child, ...props}) => {\r\n\r\n//verevi grvac@ nshanakum e, vor propsi mejic hanum e input@ ev metan\r\n//aysinqn propsi mej mnum e props@ aranc inputi ev metai\r\nconst hasError = meta.touched && meta.error;\r\nreturn (\r\n\r\n      <div className= {styles.formControl + \" \" + (hasError ? styles.error: \"\")}>\r\n       <div>\r\n     {props.children}\r\n     </div>\r\n\r\n{ hasError && <span>{meta.error}</span> }\r\n     </div>\r\n   \r\n\r\n)\r\n\r\n      \r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n\r\nconst {input, meta, child,...restProps} = props;\r\nreturn <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n\r\nconst {input, meta, child,...restProps} = props;\r\nreturn <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n let mapStateToPropsForRedirect = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth\r\n       \r\n    });\r\n \r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n\r\n       render () {\r\n\r\n           if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n          return <Component {...this.props} />\r\n       }\r\n\r\n  }\r\n \r\n let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent); // mer stexcac RedirectComponent@ coonect enq anum storin connect funkciayi mijocov\r\n \r\n\r\n      return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_nCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__low61\",\"content\":\"Profile_content__WAmvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__2JOpk\",\"posts\":\"Myposts_posts__19dHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3OXtx\"};","import React from 'react';\nimport s from './Post.module.css';\n\n\nconst Post = (props) => {\n\n   return    (\n     <div className={s.item}>\n\n        <img src = 'https://images.firstpost.com/wp-content/uploads/2017/04/avatar-380..jpg' />\n\n     {props.message}\n        <div>\n   <span> Like </span>  { props.likesCount }\n         \n         </div>\n   </div>\n\n  \n\n\n\n   )\n}\n\n\nexport default Post;\n","import React from 'react';\nimport s from './Myposts.module.css';\nimport Post from './Post/Post';\nimport  {addPostActionCreator, updateNewPostTextActionCreator} from '../../../Redux/profile-reducer';\nimport { reduxForm, Field } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../.vs/src/utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\n\nconst  maxLength10 = maxLengthCreator(10);\n\n\nconst AddNewPostForm = (props) => {\n\n return  <form onSubmit= {props.handleSubmit}>\n     \n     <div>\n       <Field component = {Textarea} placeholder= {\"Post Message\"} name= \"newPostText\" validate= {[required, maxLength10]} />\n   \n     </div>\n\n     <div>\n   <button> Add post  </button>\n     </div>\n\n    </form>\n\n  }\n\nlet AddNewPostFormRedux= reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\n\n\n// React.memo-n optimizacia e anum, \n//vor miayn ete propser kam stste poxvi, nor pereresovka lini\nconst MyPosts = React.memo(props => {\n\n  let postsElements =\n  props.posts.map ( p => <Post message={p.message} likesCount={p.likesCount} />)\n  \n\n  \nlet onAddPost = (values) => {\n\nprops.addPost(values.newPostText);\n\n\n}\n\n\n  return      (\n\n   <div className= {s.postsBlock}>\n     \n     <h3> MY posts </h3>\n    \n    <AddNewPostFormRedux onSubmit= {onAddPost}/>\n   \n  \n   <div className= {s.posts} >\n    \n    {postsElements}\n  \n\n   </div>\n\n  </div>\n    \n)\n});\n\nexport default MyPosts;\n","\r\nimport React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n  \r\n\r\n\r\n  state = { // sa local state e\r\n\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\nactivateEditMode = () => {\r\n\r\n  this.setState( {\r\n\r\neditMode: true\r\n\r\n});\r\n\r\n}\r\n\r\ndeactivateEditMode = () => {\r\n\r\nthis.setState ( {\r\n\r\neditMode: false\r\n\r\n});\r\n\r\nthis.props.updateStatus(this.state.status);\r\n}\r\n\r\n\r\nonStatusChange = (e) => {\r\n\r\nthis.setState ({\r\n\r\nstatus: e.currentTarget.value\r\n\r\n});\r\n\r\n}\r\n\r\ncomponentDidUpdate (prevProps, prevState) {\r\n\r\n  if (prevProps.status !== this.props.status) {\r\n\r\n   this.setState({\r\n\r\n    status: this.props.status\r\n   });\r\n\r\n  }\r\n}\r\n\r\n  render () {\r\n\r\n\r\n      return (\r\n  <div>\r\n     \r\n       {!this.state.editMode &&\r\n       <div>\r\n       <span onDoubleClick= { this.activateEditMode }>\r\n         {this.props.status || \"----\"} </span>\r\n    \r\n     </div>\r\n       }\r\n       {this.state.editMode   &&\r\n     <div>\r\n       <input onChange= {this.onStatusChange} autoFocus={true} onBlur= {this.deactivateEditMode } \r\n       value={this.state.status} />\r\n    \r\n     </div>\r\n      }\r\n   </div>  \r\n      )\r\n     }\r\n     \r\n  }\r\n  \r\n  export  default ProfileStatus;\r\n  ","\r\nimport React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\n\r\nconst ProfileStatusWithHooks  = (props) => {\r\n  \r\n\r\n// editMode klini true, isk setEditeMode klini funkcia, \r\n//vor@ karox e editMode-@ poxel\r\n  let [editMode, setEditeMode]= useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n\r\nuseEffect ( () => {\r\n\r\nsetStatus(props.status);\r\n\r\n\r\n// [props.status] sa nshanakum e,\r\n// vor useEffect@ kkatarvi ete mer mot poxvi props.status@\r\n//aysinqn katarvi amen angam erb mez mot poxvi props.status@\r\n\r\n}, [props.status] );\r\n\r\n\r\nconst activateEditMode = () => {\r\n\r\n  setEditeMode(true);\r\n\r\n}\r\n\r\nconst deactivateEditMode = () => {\r\n\r\n  setEditeMode(false);\r\n  props.updateStatus(status);\r\n}\r\n\r\nconst onStatusChange = (e) => {\r\n\r\nsetStatus(e.currentTarget.value);\r\n\r\n}\r\n\r\n      return (\r\n  <div>\r\n     \r\n       {!editMode &&\r\n       <div>\r\n       <span onDoubleClick = {activateEditMode}> \r\n       {props.status || \"----\"} </span>\r\n    \r\n     </div>\r\n       }\r\n       {editMode  &&\r\n     <div>\r\n       <input  onChange = {onStatusChange} autoFocus={true} onBlur = {deactivateEditMode}\r\n       value= {status} />\r\n    \r\n     </div>\r\n      }\r\n\r\n   </div>  \r\n      )\r\n     \r\n     \r\n  }\r\n  \r\n  export  default ProfileStatusWithHooks;\r\n  ","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport { Redirect } from 'react-router-dom';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\n\n\nconst ProfileInfo = (props) => {\n\n  if(!props.profile) {\n     return <Preloader />\n  }\n  \n\n   return    (\n\n   <div>\n      {/* <div>\n         <img src='https://about.canva.com/wp-content/uploads/sites/3/2016/08/logos-1.png'/>\n      </div> */}\n\n\n      <div className= {s.descriptionBlock}>\n      <img src= {props.profile.photos.large} />\n\n         ava + description\n\n       <ProfileStatusWithHooks status= {props.status} updateStatus={props.updateStatus} />\n      </div>\n\n  \n   </div>\n   \n\n   )\n   \n}\n\n\n\n\nexport default ProfileInfo;\n","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./Myposts\";\r\nimport {connect} from 'react-redux';\r\nimport {dispatch} from 'react-redux';\r\n\r\n\r\n/*\r\n    return(\r\n   <StoreContext.Consumer> \r\n       \r\n       {   (store) => {\r\n\r\n        let state= store.getState();\r\n\r\n\r\n        let addPost = () => {\r\n        \r\n        store.dispatch(addPostActionCreator());\r\n        \r\n        }\r\n        \r\n        let onPostChange = (text) =>{\r\n        \r\n        let action = updateNewPostTextActionCreator(text);\r\n        store.dispatch(action);\r\n        \r\n        }\r\n        \r\n         \r\n        return ( <MyPosts updateNewPostText= {onPostChange} \r\n            addPost= {addPost}\r\n        posts= {state.profilePage.posts}\r\n        newPostText={state.profilePage.newPostText} />)\r\n\r\n\r\n         } \r\n          \r\n       \r\n      }\r\n\r\n   </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nconst  mapStateToProps  = (state) => {\r\n\r\n    return {\r\n  \r\n      posts: state.profilePage.posts,\r\n    \r\n    }\r\n  \r\n  \r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n\r\n     addPost: (newPostText) => {\r\n       \r\n     dispatch(addPostActionCreator(newPostText));\r\n  \r\n  }\r\n  \r\n  }\r\n    \r\n  }\r\n  \r\n const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n  \r\n\r\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport MyPosts from './Myposts/Myposts';\nimport ProfileInfo from '../Profile/ProfileInfo/ProfileInfo';\nimport Post from '../Profile/Myposts/Post/Post';\nimport MyPostsContainer from './Myposts/MyPostsContainer';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../Dialogs/hoc/withAuthRedirect';\n\n\n\nconst Profile = (props) => {\n\n   return     ( \n    \n      <div>\n \n    \n         <ProfileInfo profile= {props.profile} status={props.status} updateStatus={props.updateStatus} />\n\n         <MyPostsContainer />\n         \n      </div>\n   )\n   \n}\n\n\n\nexport default Profile;\n","import React from 'react';\r\nimport Profile from '../Profile/Profile';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getUserProfile, getStatus, updateStatus} from '../../Redux/profile-reducer';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n   componentDidMount () {\r\n\r\n      let userId = this.props.match.params.userId;\r\n      if(!userId){\r\n\r\n         userId =this.props.authorizedUserId;\r\n\r\n         if (!userId){\r\n            this.props.history.push(\"/login\");\r\n         }\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n   }\r\n\r\n\r\n   \r\n    render () {\r\n\r\n       return (\r\n\r\n     \r\n    <Profile {...this.props} \r\n       profile={this.props.profile} \r\n       status={this.props.status} \r\n       updateStatus={this.props.updateStatus} />\r\n  \r\n\r\n     )\r\n    }\r\n }\r\n\r\n\r\n let mapStateToProps = (state) => ({\r\n profile: state.profilePage.profile,\r\n status: state.profilePage.status,\r\n authorizedUserId: state.auth.userId,\r\n isAuth: state.auth.isAuth\r\n });\r\n\r\n// let  AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let withUrlDataContainerComponent= withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, {getUserProfile}) (withUrlDataContainerComponent);\r\n\r\n\r\n// Verevum grvac@ nuyn nerqevi grvacn e\r\nexport default compose (\r\n   connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n   withRouter)(ProfileContainer);\r\n   // profileContainer@ skzbic obarachivaet withAuthRedirect@, heto stacvac@\r\n   //withRouter@ ev ayln"],"sourceRoot":""}