{"version":3,"sources":[".vs/src/utils/validators/validators.js","Components/login/login.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","placeholder","name","validate","component","Input","type","captchaUrl","src","createField","error","className","style","formSummaryError","connect","state","auth","isAuth","login","email","to","formData","password","rememberMe","captcha"],"mappings":"wGACA,oEAAO,IAAMA,EAAW,SAAAC,GAGxB,IAAIA,EAEJ,MAAO,qBAIMC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAE1C,GAAKA,EAAMG,OAASD,EAAW,MAAO,wC,iCCZ5C,uGA4DME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA/CL,SAACE,GAElB,OAEE,0BAAMC,SAAWD,EAAME,cACvB,6BACA,kBAAC,IAAD,CAAOC,YAAc,QAASC,KAAO,QACrCC,SAAW,CAACb,KACZc,UAAYC,OAIZ,6BACC,kBAAC,IAAD,CAAOJ,YAAc,WAAYC,KAAO,WACxCI,KAAO,WACPH,SAAW,CAACb,KACZc,UAAYC,OAIX,6BAED,kBAAC,IAAD,CAAOD,UAAYC,IAAOH,KAAO,aAAcI,KAAO,aAFrD,gBAOJR,EAAMS,YAAc,yBAAKC,IAAMV,EAAMS,aACrCT,EAAMS,YAAeE,YAAa,qBAAsB,UAAW,CAACnB,KACrEe,IAAO,IAEDP,EAAMY,OAAS,yBAAKC,UAAWC,IAAMC,kBAExCf,EAAMY,OAKJ,6BAED,mDA2CWI,uBARS,SAACC,GAAD,MAAa,CAErCR,WAAYQ,EAAMC,KAAKT,WACvBU,OAAQF,EAAMC,KAAKC,OACnBC,MAAOH,EAAMC,KAAKE,MAClBC,MAAOJ,EAAMC,KAAKG,SAGsB,CAACD,WAA1BJ,EA/BD,SAAChB,GAGb,GAAIA,EAAMmB,OACR,OAAO,kBAAC,IAAD,CAAUG,GAAM,aAS1B,OAAO,6BAEH,uCAEF,kBAACzB,EAAD,CAAiBI,SAVH,SAACsB,GAEjBvB,EAAMoB,MAAMG,EAASF,MAAOE,EAASC,SAAUD,EAASE,WAAYF,EAASG,UAQtCjB,WAAcT,EAAMS","file":"static/js/5.ac3f4362.chunk.js","sourcesContent":["\r\nexport const required = value => {\r\n\r\n\r\nif (value) return undefined;\r\n\r\nreturn \"Field is required\";\r\n\r\n\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n      if ( value.length > maxLength) return 'Max length is ${maxLength} symbols';\r\n       return undefined;\r\n    }\r\n\r\n","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../.vs/src/utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport {login, setAuthUserData, getAuthUserData} from '../../Redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\nimport { compose } from 'redux';\r\nimport {createField} from '../common/FormsControls/FormsControls';\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n return ( \r\n    \r\n   <form onSubmit= {props.handleSubmit}>\r\n   <div>\r\n   <Field placeholder= {\"Email\"} name= {\"email\"}\r\n   validate= {[required]}\r\n   component= {Input}/>\r\n   \r\n   </div>\r\n\r\n   <div>\r\n    <Field placeholder= {\"Password\"} name= {\"password\"} \r\n    type= {\"password\"}\r\n    validate= {[required]}\r\n    component= {Input}/>\r\n\r\n   </div>\r\n\r\n     <div>\r\n\r\n    <Field component= {Input} name= {\"rememberMe\"} type= {\"checkbox\"} /> Remember me\r\n\r\n    </div>\r\n\r\n\r\n{props.captchaUrl && <img src= {props.captchaUrl} />}\r\n{props.captchaUrl &&  createField (\"Symbols from image\", \"captcha\", [required], \r\nInput, {} ) }\r\n\r\n     {props.error && <div className={style.formSummaryError} >\r\n\r\n  {props.error}\r\n\r\n   </div>\r\n}\r\n\r\n     <div>\r\n\r\n    <button>  Login   </button>\r\n\r\n      </div>\r\n</form>\r\n)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n// mer stexcac formin talis enq login anun@, \r\n//vor@ gtnvum e LoginForm-um\r\n\r\nconst Login = (props) => {\r\n\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to = {\"/profile\"} />\r\n  }\r\n\r\nconst onSubmit = (formData) => {\r\n\r\n props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n//ayspes stacavac informacian dispatch enq anum serverin\r\n  }\r\n\r\n return <div>  \r\n\r\n     <h1> LOGIN </h1>  \r\n\r\n   <LoginReduxForm  onSubmit={onSubmit} captchaUrl = {props.captchaUrl} />\r\n\r\n       </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ( {\r\n\r\ncaptchaUrl: state.auth.captchaUrl,\r\nisAuth: state.auth.isAuth,\r\nlogin: state.auth.login,\r\nemail: state.auth.email\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} ) (Login);"],"sourceRoot":""}