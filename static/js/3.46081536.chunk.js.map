{"version":3,"sources":[".vs/src/utils/validators/validators.js","Components/Profile/Profile.module.css","Components/Profile/Myposts/Myposts.module.css","Components/Profile/Myposts/Post/Post.module.css","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/Myposts.jsx","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Myposts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","MyPosts","React","memo","postsElements","posts","map","p","key","id","postsBlock","values","addPost","newPostText","ProfileStatus","state","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","PureComponent","ProfileDataFormReduxForm","error","style","formSummaryError","createField","Input","profile","lookingForAJob","type","lookingForAJobDescription","Object","keys","contacts","contact","ProfileData","isOwner","onClick","goToEditMode","fullName","aboutMe","Contact","contactTitle","contactValue","ProfileInfo","useState","setEditeMode","Preloader","descriptionBlock","photos","large","userPhoto","mainPhoto","profilephoto","changephoto","target","files","savePhoto","initialValues","formData","saveProfile","then","MyPostsContainer","connect","profilePage","dispatch","addPostActionCreator","Profile","isAuth","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","snapshot","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.46081536.chunk.js","sourcesContent":["\r\nexport const required = value => {\r\n\r\n\r\nif (value) return undefined;\r\n\r\nreturn \"Field is required\";\r\n\r\n\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n      if ( value.length > maxLength) return 'Max length is ${maxLength} symbols';\r\n       return undefined;\r\n    }\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__11N6L\",\"content\":\"Profile_content__68QLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__1GQHN\",\"posts\":\"Myposts_posts__1iAg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3uf3D\"};","import React from 'react';\nimport s from './Post.module.css';\n\n\nconst Post = (props) => {\n\n   return    (\n     <div className={s.item}>\n\n        <img src = 'https://images.firstpost.com/wp-content/uploads/2017/04/avatar-380..jpg' />\n\n     {props.message}\n\n        <div>\n   <span> Like </span>  { props.likesCount }\n         \n         </div>\n   </div>\n\n  \n   )\n}\n\n\nexport default Post;\n","import React from 'react';\nimport s from './Myposts.module.css';\nimport Post from './Post/Post';\nimport  {addPostActionCreator, updateNewPostTextActionCreator} from '../../../Redux/profile-reducer';\nimport { reduxForm, Field } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../.vs/src/utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\n\nconst  maxLength10 = maxLengthCreator(10);\n\n\nconst AddNewPostForm = (props) => {\n\n return  <form onSubmit= {props.handleSubmit}>\n     \n     <div>\n       <Field component = {Textarea} placeholder= {\"Post Message\"} name= \"newPostText\" validate= {[required, maxLength10]} />\n   \n     </div>\n\n     <div>\n    <button> Add post </button>\n     </div>\n\n    </form>\n\n  }\n\nlet AddNewPostFormRedux= reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\n\n\n// React.memo-n optimizacia e anum, \n//vor miayn ete propser kam state poxvi, nor pereresovka lini\nconst MyPosts = React.memo(props => {\n\n  let postsElements =\n  props.posts.map ( p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\n  // map-eri jamanak misht key-er@ grum enq\n\n  \nlet onAddPost = (values) => {\n\nprops.addPost(values.newPostText);\nvalues.newPostText=\"\";\n\n}\n\n\n  return  (\n\n   <div className= {s.postsBlock}>     \n     <h3> My Posts </h3>\n    \n    <AddNewPostFormRedux onSubmit= {onAddPost}/>\n   \n  \n   <div className= {s.posts} >\n    \n    {postsElements}\n  \n\n   </div>\n\n  </div>\n    \n)\n});\n\nexport default MyPosts;\n","\r\nimport React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.PureComponent {\r\n  \r\n\r\n\r\n  state = { // sa local state e\r\n\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\nactivateEditMode = () => {\r\n\r\n  this.setState( {\r\n\r\neditMode: true\r\n\r\n});\r\n\r\n}\r\n\r\ndeactivateEditMode = () => {\r\n\r\nthis.setState ( {\r\n\r\neditMode: false\r\n\r\n});\r\n\r\nthis.props.updateStatus(this.state.status);\r\n}\r\n\r\n\r\nonStatusChange = (e) => {\r\n\r\nthis.setState ({\r\n\r\nstatus: e.currentTarget.value\r\n\r\n});\r\n\r\n}\r\n\r\ncomponentDidUpdate (prevProps, prevState) {\r\n\r\n  if (prevProps.status !== this.props.status) {\r\n\r\n   this.setState({\r\n\r\n    status: this.props.status\r\n   });\r\n\r\n  }\r\n}\r\n\r\n  render () {\r\n\r\n\r\n      return (\r\n  <div>\r\n     \r\n       {!this.state.editMode && \r\n       <div>\r\n      <b>Status</b>: <span onDoubleClick= {this.activateEditMode} >\r\n         {this.props.status || \"----\"} </span>\r\n    \r\n     </div>\r\n       }\r\n\r\n\r\n\r\n       {this.state.editMode   && \r\n     <div>\r\n       <input onChange= {this.onStatusChange} autoFocus={true} onBlur= {this.deactivateEditMode } \r\n       value={this.state.status} />\r\n    \r\n     </div>\r\n      }\r\n   </div>  \r\n      )\r\n     }\r\n     \r\n  }\r\n  \r\n  export  default ProfileStatus;\r\n  ","\r\nimport React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport Contact from './ProfileInfo';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\nimport s from '../ProfileInfo/ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n  return <form onSubmit={props.handleSubmit}>\r\n\r\n     <div> <button> Save </button> </div>\r\n\r\n     {props.error && <div className= {style.formSummaryError}>\r\n        {props.error}\r\n       </div>      \r\n\r\n    }\r\n\r\n    \r\n    <div> \r\n     <b>Full Name</b>: { createField( \"Full name\", \"fullName\", [], Input) }\r\n    </div>\r\n  \r\n     <div> \r\n\r\n     <b> Looking for a job </b>:\r\n      {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n     \r\n     { createField ( \"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} ) }\r\n    </div>\r\n    \r\n  \r\n     \r\n    <div> \r\n      <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n      {createField(\"My professional skills\",\"lookingForAJobDescription\", [], Textarea )}\r\n    </div>\r\n    \r\n    \r\n    <div> \r\n     <b>About me</b>: \r\n     {createField(\"About me\", \"aboutMe\", [], Textarea )}\r\n    </div>\r\n  \r\n    <div>\r\n    \r\n    {//Qani vor contacts obyekt e(nra mej tarber baner kan), Object.keys mer obyektic ksarqi masiv nra meji elementneric baxkacac\r\n    }\r\n     <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n    \r\n       return <div key={key} className={s.contact}>  \r\n       \r\n      <b>{key}: {createField (key, \"contacts.\" + key, [], Input )} </b> \r\n           \r\n        \r\n      </div>\r\n\r\n     })}\r\n\r\n     </div>\r\n    \r\n    </form>\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm ({form: 'edit-profile' }) (ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport { Redirect } from 'react-router-dom';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../.vs/src/assect/images/user.png';\nimport ProfileDataForm from './ProfileDataForm';\nimport { saveProfile } from '../../../Redux/profile-reducer';\nimport ProfileDataFormReduxForm from './ProfileDataForm';\nimport ContactsDisplay from './Contacts/ContactsDisplay';\nimport Contact from './Contact';\n\nconst ProfileInfo = (props) => {\n\n\nlet [editMode, setEditeMode] = useState(false);\n\n\n\n  if(!props.profile) {\n     return <Preloader />\n  }\n  \nconst onMainPhotoSelected = (e) => {\n\nif (e.target.files.length){// ayspes stugum enq vor file arka e\n\nprops.savePhoto(e.target.files[0]);\n\n}\n\n}\n\nconst onSubmit =  (formData) => {\n\n  //qani vor saveProfile-@ sanka e aysinqn asinxron,\n  // apa na veradardznum e promise, dra hamar el ayspes  karox enq grel\n   \n   props.saveProfile(formData).then (\n       () => {\n\n       setEditeMode(false);\n //Aysinqn spasumenq henc\n  //promis@ katarvum e nor nereqevi tox@ kkatarvi` setEditeMod-@;\n\n       }\n   );\n\n  }\n \n\n\n   return    (\n\n   <div>\n      {/* <div>\n         <img src='https://about.canva.com/wp-content/uploads/sites/3/2016/08/logos-1.png'/>\n      </div> */}\n\n\n      <div className= {s.descriptionBlock}>\n      <img src= {props.profile.photos.large || userPhoto }  className = {s.mainPhoto}/>\n\n      {props.isOwner && <div className={s.profilephoto}> Change your profile photo </div>}\n       {props.isOwner &&  <input className={s.changephoto} type = {\"file\"} onChange= {onMainPhotoSelected}  />}  \n  \n       \n { editMode \n ? <ProfileDataForm initialValues = {props.profile} onSubmit ={onSubmit}  profile= {props.profile} /> \n : <ProfileData goToEditMode= {() => {setEditeMode(true)}} profile={props.profile} isOwner={props.isOwner} status={props.status} />}\n\n      \n\n {props.isOwner && <ProfileStatus status= {props.status} updateStatus={props.updateStatus} isOwner= {props.isOwner} /> }\n\n       \n\n      </div>\n\n  \n   </div>\n   \n\n   )\n   \n}\n\nconst ProfileData = (props) => {\n\nreturn <div>\n\n{props.isOwner && <div> <button onClick = {props.goToEditMode}> Edit </button> </div>}\n\n<div> \n <b>Full Name</b>: {props.profile.fullName}\n</div>\n\n<div> \n <b>Looking for a job </b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\n</div>\n\n  {props.profile.lookingForAJob &&\n<div> \n  <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\n</div>\n}\n\n<div> \n <b>About me</b>: {props.profile.aboutMe}\n</div>\n\n\n\n\n<div>\n\n{//Qani vor contacts obyekt e(nra mej tarber baner kan), Object.keys mer obyektic ksarqi masiv nra meji elementneric baxkacac\n}\n\n\n\n {!props.isOwner && <div> <b> Contacts </b>: {Object.keys(props.profile.contacts).map(key => {\n\n   return  <Contact key={key} contactTitle ={key}  \n     contactValue= {props.profile.contacts[key]} />\n })}\n\n </div>}\n\n\n\n\n{!props.isOwner &&\n <div> \n <b>Status</b>: {props.status || \"----\"}\n</div>}\n\n</div>\n\n</div>\n\n\n}\n\n\n\n\n\nexport default ProfileInfo;\n","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./Myposts\";\r\nimport {connect} from 'react-redux';\r\nimport {dispatch} from 'react-redux';\r\n\r\n\r\n/*\r\n    return(\r\n   <StoreContext.Consumer> \r\n       \r\n       {   (store) => {\r\n\r\n        let state= store.getState();\r\n\r\n\r\n        let addPost = () => {\r\n        \r\n        store.dispatch(addPostActionCreator());\r\n        \r\n        }\r\n        \r\n        let onPostChange = (text) =>{\r\n        \r\n        let action = updateNewPostTextActionCreator(text);\r\n        store.dispatch(action);\r\n        \r\n        }\r\n        \r\n         \r\n        return ( <MyPosts updateNewPostText= {onPostChange} \r\n            addPost= {addPost}\r\n        posts= {state.profilePage.posts}\r\n        newPostText={state.profilePage.newPostText} />)\r\n\r\n\r\n         } \r\n          \r\n       \r\n      }\r\n\r\n   </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nconst  mapStateToProps  = (state) => {\r\n\r\n    return {\r\n  \r\n      posts: state.profilePage.posts,\r\n    \r\n    }\r\n  \r\n  \r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n\r\n     addPost: (newPostText) => {\r\n       \r\n     dispatch(addPostActionCreator(newPostText));\r\n  \r\n  }\r\n  \r\n  }\r\n    \r\n  }\r\n  \r\n const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n  \r\n\r\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport MyPosts from './Myposts/Myposts';\nimport ProfileInfo from '../Profile/ProfileInfo/ProfileInfo';\nimport Post from '../Profile/Myposts/Post/Post';\nimport MyPostsContainer from './Myposts/MyPostsContainer';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../Dialogs/hoc/withAuthRedirect';\n\n\n\nconst Profile = React.memo((props) => {\n\n   return     ( \n    \n      <div>\n \n    \n         <ProfileInfo savePhoto={props.savePhoto}\n          isOwner={props.isOwner}\n           profile= {props.profile} \n           status={props.status}\n            updateStatus={props.updateStatus}\n            saveProfile= {props.saveProfile} \n            isAuth= {props.isAuth}\n            \n            />\n               <MyPostsContainer />\n         \n      </div>\n   )\n   \n});\n\n\n\nexport default Profile;\n","import React from 'react';\r\nimport Profile from '../Profile/Profile';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../Redux/profile-reducer';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../Dialogs/hoc/withAuthRedirect';\r\nimport ContactsDisplay from './ProfileInfo/Contacts/ContactsDisplay';\r\n\r\nclass ProfileContainer extends React.PureComponent {\r\n  \r\n   refreshProfile() {\r\n\r\n     let userId = this.props.match.params.userId;\r\n      if(!userId){\r\n\r\n         userId =this.props.authorizedUserId;\r\n\r\n         if (!userId){\r\n            this.props.history.push(\"/login\");\r\n         }\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n\r\n   }\r\n   componentDidMount () {\r\n    this.refreshProfile();\r\n     \r\n   }\r\n\r\ncomponentDidUpdate (prevProps, prevState, snapshot)\r\n{\r\n   if(this.props.match.params.userId != prevProps.match.params.userId){\r\n     this.refreshProfile();\r\n   }\r\n}\r\n\r\n\r\n   \r\n    render () {\r\n\r\n       return ( <>\r\n\r\n     \r\n    <Profile {...this.props} \r\n      isOwner ={!this.props.match.params.userId}\r\n       profile={this.props.profile} \r\n       status={this.props.status} \r\n       updateStatus={this.props.updateStatus} \r\n       savePhoto={this.props.savePhoto}\r\n       saveProfile={this.props.saveProfile}\r\n       isAuth = {this.props.isAuth}/>\r\n\r\n\r\n      \r\n       </>\r\n     )\r\n    }\r\n }\r\n\r\n\r\n let mapStateToProps = (state) => ({\r\n profile: state.profilePage.profile,\r\n status: state.profilePage.status,\r\n authorizedUserId: state.auth.userId,\r\n isAuth: state.auth.isAuth\r\n });\r\n\r\n// let  AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let withUrlDataContainerComponent= withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, {getUserProfile}) (withUrlDataContainerComponent);\r\n\r\n\r\n// Verevum grvac@ nuyn nerqevi grvacn e\r\nexport default compose (\r\n   connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n   withRouter,withAuthRedirect)(ProfileContainer);\r\n   // profileContainer@ skzbic obarachivaet withAuthRedirect@, heto stacvac@\r\n   //withRouter@ ev ayln"],"sourceRoot":""}